#!/bin/bash

PORTS=/etc/ports
SRC=/etc/prt-get.conf
T=/tmp/prt-get.conf

missing_repo_file() {
	local d=$1
	egrep "^NAME=$(basename $d)\>" $PORTS/*.git    >/dev/null 2>&1 && return 1
	egrep "^destination=$d\>"      $PORTS/*.rsync  >/dev/null 2>&1 && return 1
	egrep "^ROOT_DIR=$d\>"         $PORTS/*.httpup >/dev/null 2>&1 && return 1
	return 0
}

declare -A known
dirs=()
for d in $(awk '$1 == "prtdir" {print $2}' $SRC)
do
	[ -z "${known[$d]}" ] || continue
	if missing_repo_file $d; then
		if [ -d $d ]; then
			echo "WARNING: Missing repo file for $d" >&2
		else
			echo "Drop $d" >&2
			continue
		fi
	fi

	known[$d]=1
	dirs+=($d)
done

for p in $(ls -1 $PORTS/ | egrep '\.(rsync|httpup|git)$' | sort)
do
	case $p in
		*.git)
			NAME=
			. $PORTS/$p
			d=/usr/ports/$NAME
			;;
		*.rsync)
			destination=
			. $PORTS/$p
			d=$destination
			;;
		*.httpup)
			ROOT_DIR=
			. $PORTS/$p
			d=$ROOT_DIR
			;;
		*)
			d=;;
	esac
	if [[ -n "$d" && -z "${known[$d]}" ]]; then
		known[$d]=1
		dirs+=($d)
	fi
done

(
	egrep -v '\s*prtdir\s+' $SRC
	for d in ${dirs[@]}
	do
		echo prtdir $d
	done
) >$T

if [ $UID = 0 ]; then
	mv -f $T $SRC
else
	cat $T && rm -f $T
fi
